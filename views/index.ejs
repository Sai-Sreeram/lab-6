<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Job Application Tracker</title>
    <link rel="stylesheet" href="styles.css">
</head>
<body>
    <div class="container">
        <!-- Header -->
        <header>
            Job Tracker
            <p>Track your job applications and stay on top of deadlines!</p>
        </header>

        <!-- Left Sidebar (Menu) -->
        <nav class="sidebar-left">
            <ul>
                <li><a href="#" id="link-applied">Applied</a></li>
                <li><a href="#" id="link-interviewing">Interviewing</a></li>
                <li><a href="#" id="link-offered">Offered</a></li>
                <li><a href="#" id="link-rejected">Rejected</a></li>
                <li><a href="#" id="link-add">Add Job Application</a></li>
            </ul>
        </nav>

        <!-- Main Content Area -->
        <main id="main-content">
            <div id="form-container">
                <h2>Add Job Application</h2>
                <form id="jobForm">
                    <label for="company">Company:</label>
                    <input type="text" id="company" required>

                    <label for="position">Position:</label>
                    <input type="text" id="position" required>

                    <label for="date">Application Date:</label>
                    <input type="date" id="date" required>

                    <label for="status">Status:</label>
                    <select id="status">
                        <option value="applied">Applied</option>
                        <option value="interviewing">Interviewing</option>
                        <option value="offered">Offered</option>
                        <option value="rejected">Rejected</option>
                    </select>

                    <button type="button" onclick="addApplication()">Add Application</button>
                </form>
            </div>
            <div id="application-list" style="display: none;"></div>
        </main>

        <!-- Right Sidebar (Advertisements) -->
        <aside class="sidebar-right">
            <!-- First Advertisement -->
            <a href="https://www.amazon.com/Cracking-Amazon-Interview-Step-Guide-ebook/dp/B078FWZGRL" target="_blank" class="ad-link">
                <img src="https://m.media-amazon.com/images/I/719QwBsXWKL._SL1500_.jpg" alt="Interview Prep Book">
                <span>Cracking the Amazon Interview: A Step-by-Step Guide</span>
            </a>

            <!-- Second Advertisement -->
            <a href="https://www.amazon.com/Ace-Interview-Job-ebook/dp/B0013D32EE/ref=sr_1_2?crid=3UWHH3RHYSJN8&dib=eyJ2IjoiMSJ9.fEI_aq_wDIIiqvPTu9uJbGkRzx0deZoYXABteMaqjuslcJpixFOysoCr2QxU9_mZ8WDBj-I_y6iiiGazwhpzIajXmYwfP3fV1pGevLyUF6248brZ6iBisVQenQ4xXhXzEHmQcbxaOmnRgFc09gWkTqtommhygZ-YiIEmpyOOt9iydfLTF7lyuh88iDFjoINc0_2DJ2b35D1TvR6FWPU4le1MbTI2qs_Sz6aW169LNpk.A-i3oeI9hRL13m267cO6VjFEEukhnbbNMpIvh-0n9F8&dib_tag=se&keywords=prepare+for+it+interview&qid=1731033511&s=digital-text&sprefix=prepare+for+i+interview%2Cdigital-text%2C297&sr=1-2" target="_blank" class="ad-link">
                <img src="https://m.media-amazon.com/images/I/51MI6VUKrJL.jpg" alt="Ace the IT Interview Book">
                <span>Ace the IT Interview: Get Your Dream Job</span>
            </a>
        </aside>

        <!-- Footer -->
<!-- Footer -->
<footer>
    <div class="addendum">
    <h3>Addendum</h3>
    <p><strong>Problem Addressed:</strong> The given project was supposed to create a job application tracker that would give the user an opportunity to add, manage, and track job applications by different statuses: Applied, Interviewing, Offered, and Rejected. The solution had to be interactive—meaning the updating of the status of the application should be done without page refresh—plus the data had to persist.</p>
    
    <p><strong>Solution Overview:</strong> It was designed using JavaScript atop MongoDB, driven by an Express backend, to make full use of dynamic functionality and persistence of data. The system then handles form submissions, systematically storing every job application into a MongoDB database while displaying applications based on status. Users interact via the Express server with a user-centric interface, and JavaScript functionality dynamically updates that interface to reflect changes in application status.</p>
    
    <p><strong>Obstacles and Resolutions:</strong></p>
    <p><em>Dynamic Data Management:</em> The main challenge regarding data management was to enable applications to be persisted and retrieved. The use of MongoDB with Mongoose provided the capability to store each job application in a database, maintaining persistence through sessions.</p>

    <p><em>Smooth Status Updates:</em> Status changes have been implemented using JavaScript and AJAX requests to the backend, enabling real-time updates without the need for page reloads. The outcome of this setup is immediate status updates that users see as soon as changes are made.</p>

    <p><em>Consistency in Styling:</em> Another challenge was to maintain a consistent, flexible style across dynamic elements. To achieve this, I applied CSS classes to each interactive element, ensuring the design remains cohesive even when elements are dynamically added or modified.</p>

    <p><em>Database Hosting and Connectivity:</em> Setting up MongoDB for dynamic data storage introduced initial challenges with connection strings and security. I resolved this by configuring environment variables for secure database credentials and testing the connection thoroughly. Additionally, I used GitHub Pages to create a friendly URL that redirects to the Render-hosted app for accessibility.</p>

    <p><em>Custom URLs and Redirection:</em> I used GitHub Pages to create a custom URL structure, <code>http://<your-github-username>.github.io/itc505/lab-6/</code>, and enabled a redirect to the Render-hosted application to enhance accessibility and meet project requirements.</p>
</div>

    
    <div class="last-updated">
        <p><strong>Last Updated:</strong> <span id="lastModified"></span></p>
    </div>
    
    <script type="text/javascript">
        // Script to display last modified date
        var lastModifiedDate = document.lastModified;
        document.getElementById('lastModified').textContent = lastModifiedDate;
    </script>
</footer>


    </div>

    <script src="script.js" defer></script>
</body>
</html>